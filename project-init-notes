# crea tu virtualenv fuera del projecto en una carpeta externa
python3 -m project-venv ../venvs/[project]-venv (Comando no testeado)
source ../venvs/[project]-venv/bin/activate

# CREA LAS VARIABLES DE ENTORNO NECESARIAS en el viertualenv/bin/activate
# Compose file evita tener que pasar parámetro de file a docker-compose
# Django settings evita tener que pasar --config a python manage.py
Al final del archivo
export COMPOSE_FILE="local.yml"
export DJANGO_SETTINGS_MODULE="config.settings.local"

Al final de la función deactivate()
   unset COMPOSE_FILE
   unset DJANGO_SETTINGS_MODULE

# Variables de entorno en Windows en el Script de tu virtualenv
# activate.ps1
Al final del archivo para registrar las variables de entorno
$env:COMPOSE_FILE="local.yml"
$env:DJANGO_SETTINGS_MODULE="config.settings.local"
# Al final de la función deactivate para eliminar las variables de entorno
$env:COMPOSE_FILE=""
$env:DJANGO_SETTINGS_MODULE=""


#Para postgres se necesita instalar dependencias previas o cambiar por el paquete binario
python -m pip install --upgrade pip
pip install -r requirements.txt

# docker
docker compose build
docker compose up (-d)

python manage.py migrate
python manage.py runserver

# Exportar datos a fixture e importar
https://www.coderedcorp.com/blog/how-to-dump-your-django-database-and-load-it-into-/
python manage.py dumpdata --natural-foreign --natural-primary -e contenttypes -e auth.Permission --indent 2 > dump.json
# migrate
loaddata fixtures/dump.json
